@page "/Orders"
@inject IJSRuntime JS

<table class="table table-hover w-50 table-sm mt-3">
    <thead class="thead-light">
        <tr>
            <th scope="col">Готовность</th>
            <th scope="col">Имя заказчика</th>
            <th scope="col">Фамилия заказчика</th>
            <th scope="col">Организация</th>
            <th scope="col">Адрес</th>
            <th scope="col">Дата заказа</th>
            <th scope="col">Список товаров</th>
            <th scope="col">Номер заказа</th>
            <th scope="col">Выполнил</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in orders)
        {
            <tr @ondblclick="@(()=>OpenUpdateModal(order.OrderID))">
                <td>@order.Condition</td>
                <td>@order.Customer.Name</td>
                <td>@order.Customer.SecondName</td>
                <td>@order.Customer.Organization</td>
                <td>@order.Customer.Address</td>
                <td>@ToDateTime(order.Date)</td>
                <td>@order.AllProducts</td>
                <td>@order.OrderID</td>
                <td>@order.Staff.SecondName  @order.Staff.Name</td>
            </tr>
        }
    </tbody>
</table>

<ElinCoureseProjectClient.Pages.Markup.ModalWindowMarkup.UpdateOrderModal Order="targetField" />

@code {
  private CPS.Orders targetField { get; set; }

  protected override async Task OnInitializedAsync()
  {
      orders = await Data.GrpcClient.GetObjectList(Data.ObjectType.Order) as List<CPS.Orders>;
      Data.GrpcClient.StateChanged += OnStateChanged;
      await InvokeAsync(() => StateHasChanged());
  }
  private async void OnStateChanged(object sender, EventArgs arg)
  {
      orders = await Data.GrpcClient.GetObjectList(Data.ObjectType.Order) as List<CPS.Orders>;
      await InvokeAsync(() => StateHasChanged());
  }
  private async void OpenUpdateModal(int ID)
  {
      targetField = (Data.GrpcClient.GetOneObject(ID, Data.ObjectType.Order) as CPS.Orders);
      await JS.InvokeVoidAsync("UpdateOrderModal");
  }
  string ToDateTime(long time) => new DateTime(time).ToShortDateString();
  List<CPS.Orders> orders = new List<CPS.Orders>();
}
