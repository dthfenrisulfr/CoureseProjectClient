@page "/Products"
@inject IJSRuntime JS
<table class="table table-hover w-50 table-sm mt-3">
    <thead class="thead-light">
        <tr>
            <th scope="col">Наименование</th>
            <th scope="col">Количество стёкол</th>
            <th scope="col">Высота</th>
            <th scope="col">Ширина</th>
            <th scope="col">Вес</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var prod in products)
        {
            <tr @ondblclick="@(()=>OpenUpdateModal(prod.ProductID))">
                <td>@prod.ProductName</td>
                <td>@prod.NumberOfGlasses</td>
                <td>@prod.Heght</td>
                <td>@prod.Width</td>
                <td>@prod.Weight</td>
            </tr>
        }
    </tbody>
</table>

<ElinCoureseProjectClient.Pages.Markup.ModalWindowMarkup.UpdateProductModal Product="targetField"/>

@code {
  private CPS.Products targetField { get; set; }

  protected override async Task OnInitializedAsync()
  {
      products = await Data.GrpcClient.GetObjectList(Data.ObjectType.Product) as List<CPS.Products>;
      Data.GrpcClient.StateChanged += OnStateChanged;
      await InvokeAsync(() => StateHasChanged());
  }
  private void DeleteProduct(CPS.Products products)
  {
      Data.GrpcClient.DeleteObject(products.ProductID, Data.ObjectType.Product);
  }
  private async void OnStateChanged(object sender, EventArgs arg)
  {
      products = await Data.GrpcClient.GetObjectList(Data.ObjectType.Product) as List<CPS.Products>;
      await InvokeAsync(() => StateHasChanged());
  }
  private async void OpenUpdateModal(int ID)
  {
      targetField = (Data.GrpcClient.GetOneObject(ID, Data.ObjectType.Product) as CPS.Products);
      await JS.InvokeVoidAsync("UpdateProductModal");
  }
  List<CPS.Products> products = new List<CPS.Products>();
}
