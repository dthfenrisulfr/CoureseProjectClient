@inject NavigationManager nav
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
        <a class="navbar-brand" href="#">Hidden brand</a>
        <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
            <li class="nav-item active">
                <a class="nav-link" href="/">Главная <span class="sr-only">(current)</span></a>
            </li>
            @foreach (var item in menuItems)
            {
                <li class="nav-item active">
                    <a class="nav-link" href="/@item.NavHref">
                        @item.NavName <span class="sr-only">(current)</span>
                                        <button type="button" class="close" aria-label="Close" @onclick="@(()=>CloseNavMenuItem(item))">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </a>
                </li>
            }
        </ul>
    </div>
</nav>

@code{

  List<ElinCoureseProjectClient.Models.MenuItems> menuItems = new List<Models.MenuItems>();
  protected override void OnInitialized()
  {
      menuItems = ElinCoureseProjectClient.Models.NavMenuList.GetList();
      ElinCoureseProjectClient.Models.NavMenuList.ChangeState += ChangeState;
  }

  private void ChangeState(object sender, EventArgs e)
  {
      StateHasChanged();
  }

  private void CloseNavMenuItem(ElinCoureseProjectClient.Models.MenuItems item)
  {
      ElinCoureseProjectClient.Models.NavMenuList.RemoveFromList(item);
      nav.NavigateTo("/");
  }
}